---
import type { NavigationLinkStoryblok } from '@/types/storyblok'
import { applyLinkAttrs } from '@/utils/link'
import clsx from 'clsx'

export type Props = {
  navigation?: NavigationLinkStoryblok[]
  socialLinks?: NavigationLinkStoryblok[]
}

const { navigation = [], socialLinks = [] } = Astro.props

const navigationHoverClass =
  'hovers:transition-transform hovers:duration-500 hovers:ease-out-power2 hovers:hover:translate-x-5'
---

<div
  class={clsx(
    'fixed left-0 top-0 z-header-menu h-screen w-screen -translate-y-full transition-transform duration-300 ease-out-power2',
    'bg-white',
  )}
  x-cloak
  x-data
  x-bind:style="$store.ui.navOpen ? { transitionDelay: '100ms', transform: 'translateY(0)'} : undefined"
  x-trap.noscroll.noautofocus="$store.ui.navOpen"
>
  <div class="min-h-svh stack">
    <div class="relative flex flex-col pb-5 pt-20">
      {
        navigation && navigation?.length > 0 && (
          <nav>
            <ul>
              {navigation?.map((item) => (
                <li class="flex-shrink-0">
                  <a
                    {...applyLinkAttrs(item.link)}
                    class={clsx(
                      'block px-page-mx py-2 text-45 uppercase leading-none',
                      navigationHoverClass,
                    )}
                  >
                    <span>{item.label}</span>
                  </a>
                </li>
              ))}
            </ul>
          </nav>
        )
      }
      <ul class="mt-auto pt-10">
        {
          socialLinks?.map((metaItem) => (
            <li class="block">
              <a
                {...applyLinkAttrs(metaItem.link)}
                class={clsx(
                  'block px-page-mx py-3 text-18 uppercase leading-none',
                  navigationHoverClass,
                )}
              >
                {metaItem.label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
