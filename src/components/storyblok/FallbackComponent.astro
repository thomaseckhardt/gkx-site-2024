---
import { storyblokEditable } from '@/utils/storyblok'
import clsx from 'clsx'
import StoryblokImage from './StoryblokImage.astro'

export type Props = {
  blok?: any
  class?: string
}

const { class: className, blok = {} } = Astro.props

const video =
  blok?.video?.filename &&
  blok?.video?.filename.startsWith('https://a.storyblok.com')
    ? blok?.video?.filename
    : undefined
const videoUrl = blok?.video?.filename
const videoPoster = blok?.poster?.filename

let description =
  blok.title || blok.headline || blok.description || blok.caption

if (typeof description === 'string') {
  description = description.trim().substring(0, 100)
}

const numItems = blok?.items?.length || blok?.links?.length || undefined
---

<div
  class={clsx('relative flex shadow-sm', className)}
  {...storyblokEditable(blok)}
  x-data="{show: false}"
>
  <button
    type="button"
    class="bg-debug w-10 flex-none"
    x-on:click="show = !show"
  >
    <span class="sr-only">Toggle data</span>
  </button>
  <div class="flex-1">
    <div class="flex flex-wrap font-mono">
      <div class="flex-none p-5">{blok?.component}</div>
      {
        description && (
          <div class="pb-5 pr-5 pt-6 text-xs">
            {description}
            {numItems && <span>({numItems})</span>}
          </div>
        )
      }
      {
        !description && videoUrl && (
          <a
            class="pb-5 pr-5 pt-6 text-xs"
            href={videoUrl}
            target="_blank"
            rel="noopener noreferrer"
          >
            <span class="underline">{videoUrl}</span>
          </a>
        )
      }
      {
        blok?.image && (
          <div class="ml-auto flex-none">
            <StoryblokImage
              image={blok.image}
              class="h-16 max-w-40 object-contain object-right"
            />
          </div>
        )
      }
      {
        blok?.images && (
          <div class="ml-auto flex flex-none">
            {blok?.images.map((image: any) => (
              <StoryblokImage image={image} class="h-16 w-16 object-cover" />
            ))}
          </div>
        )
      }
      {
        video && (
          <div class="ml-auto flex-none">
            <video
              src={video}
              controls
              class="aspect-16/9 h-16 object-contain object-right"
            />
          </div>
        )
      }
      {
        videoUrl && (
          <div class="ml-auto flex-none">
            <a
              href={videoUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="aspect-16/9 relative block h-16"
            >
              {videoPoster && (
                <img
                  src={videoPoster}
                  class="absolute inset-0 h-full w-full object-cover"
                />
              )}
            </a>
          </div>
        )
      }
    </div>
    <div class="px-5 pb-5 pt-0 text-xs" x-show="show">
      <pre>{blok ? JSON.stringify(blok, null, 1) : 'Component has no content'}</pre>
    </div>
  </div>
</div>
