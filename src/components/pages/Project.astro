---
import ProjectHero from '@/components/sections/ProjectHero.astro'
import Button from '@/components/shared/Button.astro'
import EntryLayout from '@/layouts/EntryLayout.astro'
import type { ProjectStoryblok } from '@/types/storyblok'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import clsx from 'clsx'
import type { StoryblokStory } from 'storyblok-generate-ts'
import HeroSlide from '@/components/blocks/HeroSlide.astro'

export type Props = {
  site: Object
  story: StoryblokStory<ProjectStoryblok>
  blok: ProjectStoryblok
}

const { site, story, blok } = Astro.props

let headingCount = 0
const body =
  blok.information?.map((blok) => {
    console.log(blok.component)
    if (blok.component === 'Headline') {
      headingCount++
      console.log(headingCount)
      return {
        ...blok,
        _props: {
          textSize: headingCount === 1 ? 'display' : 'large',
          headingOrder: headingCount === 1 ? 1 : 2,
        },
      }
    }
    return blok
  }) ?? []
---

<EntryLayout site={site} story={story}>
  <main
    class={clsx(
      'x-main',
      'text-22 lg:text-25',
      'h-svh snap-y snap-mandatory overflow-y-auto overflow-x-hidden',
    )}
    x-data="project"
  >
    <!-- <div class={clsx('sticky top-0 h-svh snap-start overflow-hidden')}>
      <HeroSlide
        blok={blok.heroSlides?.[0]}
        class="absolute inset-0"
        imageTransitionName={`project-cover/${story.slug}`}
        showText={false}
      />
    </div> -->
    <ProjectHero
      as="header"
      spacing="none"
      slides={blok.heroSlides}
      class="x-hero sticky top-0 h-svh snap-start"
    >
      <div slot="infoButton" class="x-info-open">
        <Button as="button" x-on:click="() => openInfo()">Info</Button>
      </div>
      <div
        slot="backdrop"
        aria-hidden
        class={clsx(
          'x-backdrop opacity-0',
          'pointer-events-none absolute inset-0 z-30 h-full h-svh w-full bg-white',
        )}
      >
      </div>
    </ProjectHero>

    <div class={clsx('x-info', 'relative snap-start pb-20')}>
      <div
        x-ref="info"
        class={clsx('x-info-close', 'relative z-20 mb-3 px-page-mx pt-page-mx')}
      >
        <Button as="button" x-on:click="() => closeInfo()">Close</Button>
      </div>
      {
        body?.map((section, index) => (
          <StoryblokComponent
            blok={section}
            story={story}
            spacing={index === 0 ? 'none' : 'paragraph'}
            class="z-20"
            {...section._props}
          />
        ))
      }
    </div>
  </main>
</EntryLayout>
