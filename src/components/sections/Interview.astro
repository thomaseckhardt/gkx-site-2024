---
import Section from '@/components/sections/Section.astro'
import type { InterviewStoryblok } from '@/types/storyblok'
import clsx from 'clsx'
import HtmlHeading from '../shared/HtmlHeading.astro'
import StoryblokRichText from '../storyblok/StoryblokRichText.astro'
import { isRichTextField } from '@/utils/storyblok/richtext'

export type Props = {
  class?: string
  blok: InterviewStoryblok
}

const { class: className, blok, ...props } = Astro.props
---

<Section
  class={clsx('relative', className)}
  blok={blok}
  spacing="md"
  {...props}
>
  {
    blok.headline && (
      <HtmlHeading
        class={clsx(
          'mx-page-mx max-w-text font-sans text-42 font-bold uppercase tracking-wide lg:text-45',
        )}
        order={blok.headingOrder}
      >
        {blok.headline}
      </HtmlHeading>
    )
  }
  <div
    x-data="{
        selectedId: null,
        init() {
            // Set the first available tab on the page on page load.
            this.$nextTick(() => this.select(this.$id('tab', 1)))
        },
        select(id) {
            this.selectedId = id
        },
        isSelected(id) {
            return this.selectedId === id
        },
        whichChild(el, parent) {
            return Array.from(parent.children).indexOf(el) + 1
        }
    }"
    x-id="['tab']"
    class={clsx(blok.headline && 'mt-10')}
  >
    {
      blok.questions && blok.questions?.length > 0 && (
        <ul
          x-ref="tablist"
          x-on:keydown.right.prevent.stop="$focus.wrap().next()"
          x-on:keydown.home.prevent.stop="$focus.first()"
          x-on:keydown.page-up.prevent.stop="$focus.first()"
          x-on:keydown.left.prevent.stop="$focus.wrap().prev()"
          x-on:keydown.end.prevent.stop="$focus.last()"
          x-on:keydown.page-down.prevent.stop="$focus.last()"
          role="tablist"
          class={clsx(
            'grid grid-flow-col items-center gap-x-5',
            'auto-cols-[calc((100%_-_var(--gap))_/_1.5)] sm:auto-cols-[20rem]',
            'scroll-px-page-mx px-page-mx',
            'scrollbar-hidden snap-x snap-mandatory overflow-x-auto overflow-y-hidden',
          )}
        >
          {blok.questions.map((question) => (
            <li class="flex-none snap-start">
              <button
                role="tab"
                x-bind:id="$id('tab', whichChild($el.parentElement, $refs.tablist))"
                x-on:click="select($el.id)"
                x-on:mousedown.prevent
                x-on:focus="select($el.id)"
                type="button"
                x-bind:tabindex="isSelected($el.id) ? 0 : -1"
                x-bind:aria-selected="isSelected($el.id)"
                class={clsx(
                  'w-full rounded-xl border border-black px-4 py-3 text-left text-22 lg:text-25',
                  'linear transition-colors duration-300',
                )}
                x-bind:class="isSelected($el.id) ? 'bg-accent text-black' : 'bg-black text-white'"
              >
                {question.question}
              </button>
            </li>
          ))}
        </ul>
      )
    }
    {
      blok.questions && blok.questions?.length > 0 && (
        <div class="mt-15 max-w-page mx-page-mx stack">
          {blok.questions.map((question) => (
            <section
              x-show="isSelected($id('tab', whichChild($el, $el.parentElement)))"
              x-bind:aria-labelledby="$id('tab', whichChild($el, $el.parentElement))"
              x-transition:enter="transition ease-in-out duration-300"
              x-transition:enter-start="opacity-0 translate-x-20"
              x-transition:enter-end="opacity-100 translate-x-0"
              x-transition:leave="transition ease-in-out duration-300"
              x-transition:leave-start="opacity-100 translate-x-0"
              x-transition:leave-end="opacity-0 -translate-x-20"
              role="tabpanel"
            >
              <div class="gap-y-15 gap-x-30 grid lg:grid-cols-2">
                {isRichTextField(question.answerOne) && (
                  <div>
                    <p class="mb-2 font-sans text-18 font-normal uppercase leading-none lg:text-20">
                      <span class="inline-block rounded-[0.6em] bg-black px-2 py-0.5 text-white">
                        Mick
                      </span>
                    </p>
                    <StoryblokRichText
                      content={question.answerOne}
                      class={clsx(
                        'richtext max-w-text',
                        'font-serif text-22 lg:text-25',
                      )}
                    />
                  </div>
                )}
                {isRichTextField(question.answerTwo) && (
                  <div class="lg:col-start-2">
                    <p class="mb-2 font-sans text-18 font-normal uppercase leading-none lg:text-20">
                      <span class="inline-block rounded-[0.6em] bg-black px-2 py-0.5 text-white">
                        Oli
                      </span>
                    </p>
                    <StoryblokRichText
                      content={question.answerTwo}
                      class={clsx(
                        'richtext max-w-text',
                        'font-serif text-22 lg:text-25',
                      )}
                    />
                  </div>
                )}
              </div>
            </section>
          ))}
        </div>
      )
    }
  </div>
</Section>
