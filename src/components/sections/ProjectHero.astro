---
import Section from '@/components/sections/Section.astro'
import type { HeroSlideStoryblok } from '@/types/storyblok'
import clsx from 'clsx'
import HeroSlide from '../blocks/HeroSlide.astro'
import CircularProgress from '../shared/CircularProgress.astro'

export type Props = {
  class?: string
  slides: HeroSlideStoryblok[]
  as?: string
}

const { class: className, slides = [], ...props } = Astro.props
---

<Section
  as="section"
  class={clsx('relative h-svh bg-white', className)}
  {...props}
  x-data="hero"
  aria-label="Project gallery"
>
  <div class="x-hero-inner will-change-transform">
    {
      slides.length > 0 && (
        <div x-ref="carousel" class="splide">
          <div class="splide__track">
            <ul class="splide__list">
              {slides.map((slide) => (
                <HeroSlide blok={slide} class="splide__slide" />
              ))}
            </ul>
          </div>
          <div class="absolute bottom-5 left-page-mx right-page-mx z-20 flex items-center justify-between">
            <div class="flex-none">
              <slot name="infoButton" />
            </div>
            <div class="ml-auto flex flex-none items-center gap-x-2">
              <div class="text-18 whitespace-nowrap text-white">
                <span x-text="index" />/<span x-text="total" />
              </div>
              <button class="splide__toggle" type="button">
                <CircularProgress />
              </button>
            </div>
          </div>
        </div>
      )
    }
    <slot name="backdrop" />
  </div>
</Section>
